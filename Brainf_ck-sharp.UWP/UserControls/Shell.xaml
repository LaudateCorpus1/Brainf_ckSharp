<UserControl
    x:Class="Brainf_ck_sharp_UWP.UserControls.Shell"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Brainf_ck_sharp_UWP.UserControls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:virtualKeyboard="using:Brainf_ck_sharp_UWP.UserControls.VirtualKeyboard"
    xmlns:header="using:Brainf_ck_sharp_UWP.UserControls.Header"
    xmlns:xaml="using:Microsoft.Graphics.Canvas.UI.Xaml"
    xmlns:views="using:Brainf_ck_sharp_UWP.Views"
    xmlns:customCommandBar="using:Brainf_ck_sharp_UWP.UserControls.CustomCommandBar"
    xmlns:stdinHeader="using:Brainf_ck_sharp_UWP.UserControls.VirtualKeyboard.StdinHeader"
    mc:Ignorable="d"
    d:DesignHeight="600"
    d:DesignWidth="400">

    <RelativePanel>
        
        <!--Fade canvas-->
        <Canvas 
            Background="#80000000"
            RelativePanel.AlignLeftWithPanel="True"
            RelativePanel.AlignRightWithPanel="True"
            RelativePanel.AlignTopWithPanel="True"
            RelativePanel.AlignBottomWithPanel="True"
            Canvas.ZIndex="2"
            IsHitTestVisible="False"
            x:Name="FadeCanvas"
            d:IsHidden="True"/>
        
        <!--UI header-->
        <Grid
            Canvas.ZIndex="1"
            x:Name="HeaderGrid"
            RelativePanel.AlignTopWithPanel="True"
            RelativePanel.AlignLeftWithPanel="True"
            RelativePanel.AlignRightWithPanel="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            
            <!--CompositionBorder-->
            <xaml:CanvasControl x:Name="HeaderCanvas"/>
            <Border 
                x:Name="HeaderBorder"
                Grid.Row="0"
                Grid.RowSpan="2"/>
            
            <!--Title placeholder-->
            <Grid 
                x:Name="PCPlaceholderGrid"
                Grid.Row="0">
                <TextBlock
                    Foreground="White"
                    Text="Brainf*ck#"
                    FontSize="12"
                    FontWeight="SemiLight"
                    Margin="12,0,0,0"
                    VerticalAlignment="Center"/>
                <Rectangle
                    Height="32"
                    HorizontalAlignment="Stretch"/>
            </Grid>
            
            <!--Header with pivot buttons-->
            <header:HeaderControl
                Grid.Row="1"
                SelectedHeaderIndex="{x:Bind PivotControl.SelectedIndex, Mode=TwoWay}"/>
        </Grid>
        
        <!--Console and IDE-->
        <Pivot
            x:Name="PivotControl"
            RelativePanel.AlignTopWithPanel="True"
            RelativePanel.Above="OperatorsKeyboard"
            Style="{StaticResource PivotCustomStyle}">
            
            <!--Console-->
            <PivotItem Margin="8,0,8,8">
                <views:ConsoleView x:Name="Console"/>
            </PivotItem>
            
            <!--IDE-->
            <PivotItem Margin="0">
                
            </PivotItem>
        </Pivot>

        <!--Commands prompt-->
        <Grid
            x:Name="OperatorsKeyboard"
            Background="#FF121212"
            RelativePanel.Above="SharedCommandBar"
            RelativePanel.AlignLeftWithPanel="True"
            RelativePanel.AlignRightWithPanel="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="48"/>
                <RowDefinition Height="180"/>
            </Grid.RowDefinitions>

            <!--CompositionBorder-->
            <xaml:CanvasControl x:Name="KeyboardCanvas"/>
            <Border 
                x:Name="KeyboardBorder"
                Grid.Row="0"
                Grid.RowSpan="2"/>
            
            <!--Header-->
            <Canvas 
                Grid.Row="0"
                Background="#40000000"/>
            <stdinHeader:KeyboardHeaderControl 
                Grid.Row="0"
                SelectedHeaderIndex="{x:Bind CommandsPivot.SelectedIndex, Mode=TwoWay}"/>
            
            <!--Keyboard pivot-->
            <Pivot 
                Grid.Row="1"
                Style="{StaticResource PivotCustomStyle}"
                x:Name="CommandsPivot">

                <!--Keyboard UI-->
                <PivotItem Margin="0">
                    <virtualKeyboard:VirtualKeyboardControl/>
                </PivotItem>
                
                <!--Memory view-->
                <PivotItem 
                    Margin="0"
                    Background="#36000000">
                    
                </PivotItem>
            </Pivot>
        </Grid>

        <!--Command bar-->
        <customCommandBar:CommandBarWithButtonsAnimations
            x:Name="SharedCommandBar"
            RelativePanel.AlignLeftWithPanel="True"
            RelativePanel.AlignRightWithPanel="True"
            RelativePanel.Above="InfoBar">
            <customCommandBar:CommandBarWithButtonsAnimations.PrimaryCommands>
                <customCommandBar:CustomCommandBarButton
                    Label="Play"
                    Icon="&#xE102;"
                    x:Uid="PlayButton"
                    DefaultButton="True"
                    IsEnabled="{x:Bind ViewModel.PlayAvailable, Mode=OneWay, FallbackValue=False}"
                    Click="{x:Bind RequestPlay}"/>
                <customCommandBar:CustomCommandBarButton
                    Label="Memory state"
                    Icon="&#xE74C;"
                    DefaultButton="True"
                    x:Uid="MemoryState"
                    Click="{x:Bind RequestShowMemoryState}"/>
                <customCommandBar:CustomCommandBarButton
                    Label="Clear"
                    Icon="&#xE10A;"
                    x:Uid="Clear"
                    IsEnabled="{x:Bind ViewModel.ClearAvailable, Mode=OneWay, FallbackValue=False}"
                    DefaultButton="True"
                    Click="{x:Bind RequestClearConsoleLine}"/>
                <customCommandBar:CustomCommandBarButton
                    Label="Undo"
                    Icon="&#xE750;"
                    x:Uid="Undo"
                    IsEnabled="{x:Bind ViewModel.UndoAvailable, Mode=OneWay, FallbackValue=False}"
                    DefaultButton="True"
                    Click="{x:Bind RequestUndoConsoleCharacter}"/>
            </customCommandBar:CommandBarWithButtonsAnimations.PrimaryCommands>
            <customCommandBar:CommandBarWithButtonsAnimations.SecondaryCommands>
                <customCommandBar:CustomCommandBarButton
                    Label="Restart"
                    x:Uid="Restart"
                    Icon="&#xE117;"
                    IsEnabled="{x:Bind ViewModel.RestartAvailable, Mode=OneWay, FallbackValue=False}"
                    Click="{x:Bind RequestRestartConsole}"/>
                <customCommandBar:CustomCommandBarButton
                    Label="Clear screen"
                    x:Uid="Clrscr"
                    Icon="&#xEA99;"
                    IsEnabled="{x:Bind ViewModel.ClearScreenAvailable, Mode=OneWay, FallbackValue=False}"
                    Click="{x:Bind RequestClearScreen}"/>
            </customCommandBar:CommandBarWithButtonsAnimations.SecondaryCommands>
        </customCommandBar:CommandBarWithButtonsAnimations>

        <!--Status bar-->
        <local:BottomEdgeInfoBar
            x:Name="InfoBar"
            RelativePanel.AlignLeftWithPanel="True"
            RelativePanel.AlignRightWithPanel="True"
            RelativePanel.AlignBottomWithPanel="True"/>
    </RelativePanel>
</UserControl>
