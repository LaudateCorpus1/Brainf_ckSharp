<UserControl
    x:Class="Brainf_ck_sharp_UWP.UserControls.Flyouts.IDERunResultFlyout"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:templateSelectors="using:Brainf_ck_sharp_UWP.TemplateSelectors"
    xmlns:flyouts="using:Brainf_ck_sharp_UWP.UserControls.Flyouts"
    xmlns:attached="using:Brainf_ck_sharp_UWP.AttachedProperties"
    xmlns:converters="using:Brainf_ck_sharp_UWP.Converters"
    xmlns:customControls="using:Brainf_ck_sharp_UWP.UserControls.CustomControls"
    xmlns:jumpList="using:Brainf_ck_sharp_UWP.UserControls.DataTemplates.JumpList"
    xmlns:ideResult="using:Brainf_ck_sharp_UWP.UserControls.DataTemplates.JumpList.IDEResult"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">
    <UserControl.Resources>
        
        <!--Buttons animation-->
        <Storyboard 
            x:Name="ButtonsOutStoryboard"
            TargetName="ButtonsGrid">
            <DoubleAnimation
                Storyboard.TargetProperty="Height"
                EnableDependentAnimation="True"
                From="60"
                To="0"
                Duration="0:0:0.5">
                <DoubleAnimation.EasingFunction>
                    <CircleEase EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation
                Storyboard.TargetProperty="Opacity"
                From="1"
                To="0"
                Duration="0:0:0.5"/>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <x:Boolean>False</x:Boolean>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard 
            x:Name="ButtonsInStoryboard"
            TargetName="ButtonsGrid">
            <DoubleAnimation
                Storyboard.TargetProperty="Height"
                EnableDependentAnimation="True"
                From="0"
                To="60"
                Duration="0:0:0.5"/>
            <DoubleAnimation
                Storyboard.TargetProperty="Opacity"
                From="0"
                To="1"
                Duration="0:0:0.5"/>
            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)">
                <DiscreteObjectKeyFrame KeyTime="0">
                    <DiscreteObjectKeyFrame.Value>
                        <x:Boolean>True</x:Boolean>
                    </DiscreteObjectKeyFrame.Value>
                </DiscreteObjectKeyFrame>
            </ObjectAnimationUsingKeyFrames>
        </Storyboard>

        <!--Stdout-->
        <DataTemplate x:Key="StdoutTemplate">
            <TextBlock
                Text="{Binding Session.CurrentResult.Output}"
                FontSize="16"
                Foreground="Cornsilk"
                Margin="12,0,16,0"
                TextWrapping="Wrap"/>
        </DataTemplate>

        <!--Exception converter-->
        <converters:ExceptionTypeConverter x:Key="ExceptionConverter"/>

        <!--Exception result template-->
        <DataTemplate x:Key="ExceptionInfoTemplate">
            <TextBlock
                Margin="12,0,16,0"
                FontSize="16"
                TextWrapping="Wrap">
                <Run 
                    Text="{Binding Info.ExceptionType, Converter={StaticResource ExceptionConverter}}"
                    FontWeight="Bold"
                    Foreground="#FFA00000"/>
                <Run 
                    Text="&gt;"
                    FontWeight="Bold"
                    Foreground="#FFA00000"/>
                <Run 
                    attached:RunInlineHelper.BindableText="{Binding Info.Message}"
                    FontWeight="SemiBold"
                    Foreground="#FF900000"/>
            </TextBlock>
        </DataTemplate>

        <!--Source code-->
        <DataTemplate x:Key="SourceCodeTemplate">
            <TextBlock
                FontSize="16"
                Margin="12,0,16,4"
                TextWrapping="Wrap">
                <Span attached:Brainf_ckCodeInlineFormatter.Source="{Binding Session.CurrentResult.SourceCode}"/>
            </TextBlock>
        </DataTemplate>

        <!--Stop position-->
        <DataTemplate x:Key="StopPositionTemplate">
            <customControls:ErrorCharacterDisplayControl 
                HorizontalAlignment="Left"
                Margin="12,8,16,4"
                Height="40"
                Width="180"
                ExceptionInfo="{Binding Session.CurrentResult.ExceptionInfo}"/>
        </DataTemplate>

        <!--Stack trace-->
        <DataTemplate x:Key="StackTraceTemplate">
            <TextBlock
                FontSize="16"
                Margin="12,0,16,4"
                TextWrapping="Wrap">
                <Span attached:Brainf_ckCodeInlineFormatter.StackTrace="{Binding Session.CurrentResult.ExceptionInfo.StackTrace}"/>
            </TextBlock>
        </DataTemplate>

        <!--Memory state-->
        <DataTemplate x:Key="MemoryStateTemplate">
            <flyouts:MemoryViewerFlyout
                Margin="12,0,0,-4"
                Source="{Binding IndexedState}"/>
        </DataTemplate>
        
        <!--Statistics-->
        <DataTemplate x:Key="StatisticsTemplate">
            <customControls:ScriptStatisticsDisplayControl 
                HorizontalAlignment="Left"
                Margin="12,8,16,12"
                Height="48"
                Width="260"
                Result="{Binding Session.CurrentResult}"/>
        </DataTemplate>

        <!--Template selector-->
        <templateSelectors:IDERunResultTemplateSelector x:Key="ResultTemplateSelector"/>

        <!--Headers converter-->
        <converters:IDESectionToDisplayNameConverter x:Key="HeadersConverter"/>
        <converters:IDESectionToUppercaseDisplayNameConverter x:Key="UppercaseConverter"/>
        
        <!--Header-->
        <DataTemplate x:Key="HeaderTemplate">
            <jumpList:JumpListZoomedInHeaderTemplate
                Title="{Binding Key, Converter={StaticResource HeadersConverter}}"
                Margin="12,8,16,0"/>
        </DataTemplate>

        <!--Zoomed out default header-->
        <DataTemplate x:Key="ZoomedOutDefaultHeaderTemplate">
            <ideResult:IDEResultZoomedOutHeaderTemplate
                Title="{Binding Group.Key, Converter={StaticResource UppercaseConverter}}"
                DataModel="{Binding Group.Sample}"/>
        </DataTemplate>
    </UserControl.Resources>

    <!--Root grid-->
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        
        <!--Main content-->
        <SemanticZoom 
            Style="{StaticResource SemanticZoomCustomStyle}"
            Grid.ColumnSpan="2">
            <SemanticZoom.ZoomedInView>

                <!--ZoomedInView-->
                <ListView 
                    ItemsSource="{x:Bind ViewModel.View, Mode=OneWay}"
                    ItemContainerStyle="{StaticResource ListViewItemWithoutPointerVisualStates}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    IsItemClickEnabled="False"
                    ItemTemplateSelector="{StaticResource ResultTemplateSelector}">
                    <ListView.GroupStyle>
                        <GroupStyle 
                            HeaderTemplate="{StaticResource HeaderTemplate}"
                            HeaderContainerStyle="{StaticResource GroupsViewListHeaderStyle}"/>
                    </ListView.GroupStyle>
                </ListView>
            </SemanticZoom.ZoomedInView>
            <SemanticZoom.ZoomedOutView>

                <!--ZoomedOutView-->
                <ListView 
                    ItemsSource="{x:Bind ViewModel.CollectionGroups, Mode=OneWay}"
                    Style="{StaticResource GenericJumpListPickerStyle}"
                    ItemContainerStyle="{StaticResource ListViewItemWithoutPointerVisualStates}"
                    ItemTemplate="{StaticResource ZoomedOutDefaultHeaderTemplate}"/>
            </SemanticZoom.ZoomedOutView>
        </SemanticZoom>

        <!--Breakpoints control buttons-->
        <Grid 
            Height="0"
            x:Name="ButtonsGrid"
            Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <!--Continue-->
            <customControls:IDESessionBreakpointOptionControl
                VerticalAlignment="Stretch"
                Title="Continue"
                x:Uid="ContinueButton"
                Tapped="{x:Bind ViewModel.Continue}">
                <customControls:IDESessionBreakpointOptionControl.IconContent>
                    <Grid>
                        <Polygon 
                            Points="0,0 0,18.75 15,9.375" 
                            Stroke="DarkGreen" 
                            Fill="Green" 
                            VerticalAlignment="Center"/>
                    </Grid>
                </customControls:IDESessionBreakpointOptionControl.IconContent>
            </customControls:IDESessionBreakpointOptionControl>
            
            <!--Skip-->
            <customControls:IDESessionBreakpointOptionControl
                Grid.Column="1"
                VerticalAlignment="Stretch"
                Title="Skip"
                x:Uid="SkipButton"
                Tapped="{x:Bind ViewModel.RunToCompletion}">
                <customControls:IDESessionBreakpointOptionControl.IconContent>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Polygon 
                            Points="0,0 0,18.75 12,9.375" 
                            Stroke="DarkGreen" 
                            Fill="#FF4F824C" 
                            VerticalAlignment="Center"/>
                        <Polygon 
                            Grid.Column="1"
                            Points="0,0 0,18.75 12,9.375" 
                            Stroke="DarkGreen" 
                            Fill="#FF4F824C" 
                            VerticalAlignment="Center"/>
                    </Grid>
                </customControls:IDESessionBreakpointOptionControl.IconContent>
            </customControls:IDESessionBreakpointOptionControl>
        </Grid>
    </Grid>
</UserControl>
