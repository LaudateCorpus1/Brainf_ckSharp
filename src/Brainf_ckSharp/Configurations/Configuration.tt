<#@ template language="C#"
#><#@ assembly name="System.Core" #>
using System;
using System.Threading;
using Brainf_ckSharp.Enums;
using Brainf_ckSharp.Memory.Interfaces;

#pragma warning disable CS0282

namespace Brainf_ckSharp.Configurations
{
<#
var names = new[] {"Debug", "Release"};
foreach (var name in names)
{
    if (name != names[0]) WriteLine("");
#>
    /// <summary>
    /// A model for a <#=name.ToUpper()#> configuration being built
    /// </summary>
    public readonly ref partial struct <#=name#>Configuration
    {
        /// <summary>
        /// The source code to parse and execute
        /// </summary>
        public readonly ReadOnlyMemory<char>? Source;

        /// <summary>
        /// The (optional) stdin buffer to use to run the script
        /// </summary>
        public readonly string? Stdin;

        /// <summary>
        /// The (optional) initial machine state to use to execute the script
        /// </summary>
        public readonly IReadOnlyMachineState? InitialState;

        /// <summary>
        /// The (optional) memory size for the machine state to use
        /// </summary>
        public readonly int? MemorySize;

        /// <summary>
        /// The (optional) overflow mode to use to run the script
        /// </summary>
        public readonly OverflowMode? OverflowMode;

        /// <summary>
        /// The token to cancel a long running execution
        /// </summary>
        public readonly CancellationToken ExecutionToken;
    }
<#
}
#>
}
