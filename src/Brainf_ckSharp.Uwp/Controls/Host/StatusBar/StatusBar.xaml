<UserControl
    x:Class="Brainf_ckSharp.Uwp.Controls.Host.StatusBar"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:controls="using:Brainf_ckSharp.Shared.ViewModels.Controls"
    xmlns:viewModels="using:Brainf_ckSharp.Shared.ViewModels.Views"
    xmlns:system="using:System"
    xmlns:convertersUI="using:Brainf_ckSharp.Uwp.Converters.UI"
    xmlns:converters="using:Brainf_ckSharp.Uwp.Converters"
    xmlns:toolkit="using:Microsoft.Toolkit.Uwp.UI.Controls"
    mc:Ignorable="d"
    d:DesignHeight="48"
    d:DesignWidth="400">
    <UserControl.DataContext>
        <controls:StatusBarViewModel x:Name="ViewModel"/>
    </UserControl.DataContext>
    <UserControl.Resources>

        <!--Console/Ide converter-->
        <converters:TypeToVisibilityConverter x:Key="IdeTypeConverter" TargetType="viewModels:IdeViewModel"/>
    </UserControl.Resources>

    <Grid
        x:Name="RootGrid"
        Background="{StaticResource SystemControlHighlightAccentBrush}"
        Padding="16,0,16,0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/> <!--State-->
            <ColumnDefinition Width="Auto"/> <!--Info-->
        </Grid.ColumnDefinitions>

        <!--Visual states-->
        <VisualStateManager.VisualStateGroups>

            <!--Read or error visual states-->
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.WorkspaceViewModel.ValidationResult.IsSuccessOrEmptyScript, Mode=OneWay}"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootGrid.Background" Value="{StaticResource SystemControlHighlightAccentBrush}"/>
                        <Setter Target="ErrorBlock.Visibility" Value="Collapsed"/>
                        <Setter Target="InfoBlock.Text" Value="Ready"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.Setters>
                        <Setter Target="RootGrid.Background" Value="#FFCA5100"/>
                        <Setter Target="ErrorBlock.Visibility" Value="Visible"/>
                        <Setter Target="InfoBlock.Text" Value="Invalid syntax"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!--State info-->
        <TextBlock
            x:Name="InfoBlock"
            Text="Ready"
            Foreground="White"
            FontSize="12"
            FontWeight="Normal"
            VerticalAlignment="Center"
            TextTrimming="CharacterEllipsis"/>

        <!--Using a WrapPanel here as it ignores the horizontal spacing for collapsed
            items, whereas a StackPanel would still accumulate the spacing when not needed-->
        <toolkit:WrapPanel
            Grid.Column="1"
            Orientation="Horizontal"
            HorizontalSpacing="16"
            VerticalAlignment="Center">

            <!--Error-->
            <TextBlock
                x:Name="ErrorBlock"
                Foreground="White"
                FontSize="12"
                VerticalAlignment="Center"
                IsTextScaleFactorEnabled="False"
                FontWeight="Normal"
                Text="{x:Bind system:String.Format('Error: {0}', ViewModel.WorkspaceViewModel.ValidationResult.ErrorOffset), Mode=OneWay}"/>

            <!--Row-->
            <TextBlock
                Foreground="White"
                FontSize="12"
                VerticalAlignment="Center"
                IsTextScaleFactorEnabled="False"
                FontWeight="Normal"
                Text="{x:Bind system:String.Format('Row: {0}', ViewModel.WorkspaceViewModel.Row), Mode=OneWay}"
                Visibility="{x:Bind ViewModel.WorkspaceViewModel, Converter={StaticResource IdeTypeConverter}, Mode=OneWay}"/>

            <!--Column-->
            <TextBlock
                Foreground="White"
                FontSize="12"
                VerticalAlignment="Center"
                IsTextScaleFactorEnabled="False"
                FontWeight="Normal"
                Text="{x:Bind system:String.Format('Col: {0}', ViewModel.WorkspaceViewModel.Column), Mode=OneWay}"/>

            <!--File-->
            <Grid Visibility="{x:Bind convertersUI:ObjectNotNullToVisibilityConverter.Convert(ViewModel.WorkspaceViewModel.Code.File), Mode=OneWay, FallbackValue=Collapsed}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <TextBlock 
                    Text="&#xE70B;"
                    Style="{StaticResource FontIconTextBlockStyle}"
                    VerticalAlignment="Center"
                    FontSize="14"/>
                <TextBlock 
                    Foreground="White"
                    Margin="4,0,0,0"
                    FontSize="12"
                    Text="{x:Bind ViewModel.WorkspaceViewModel.Code.File.DisplayName, Mode=OneWay}"
                    VerticalAlignment="Center"
                    IsTextScaleFactorEnabled="False"
                    Grid.Column="1"
                    TextWrapping="NoWrap"
                    TextTrimming="CharacterEllipsis"
                    FontWeight="{x:Bind convertersUI:BoolToFontWeightConverter.Convert(ViewModel.WorkspaceViewModel.IsUnsavedEditPending), Mode=OneWay}"
                    MaxLines="1"/>
            </Grid>
        </toolkit:WrapPanel>
    </Grid>
</UserControl>
