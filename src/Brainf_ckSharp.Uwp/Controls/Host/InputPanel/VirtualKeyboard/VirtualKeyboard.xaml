<UserControl
    x:Class="Brainf_ckSharp.Uwp.Controls.Host.InputPanel.VirtualKeyboard"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="using:Brainf_ckSharp.Uwp.Controls.Host.InputPanel"
    xmlns:constants="using:Brainf_ckSharp.Constants"
    xmlns:controls="using:Brainf_ckSharp.Shared.ViewModels.Controls"
    xmlns:convertersUI="using:Brainf_ckSharp.Uwp.Converters.UI"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">
    <UserControl.DataContext>
        <controls:VirtualKeyboardViewModel x:Name="ViewModel"/>
    </UserControl.DataContext>

    <!--Operators pad-->
    <Grid
        x:Name="RootGrid"
        Padding="4"
        RowSpacing="4"
        ColumnSpacing="4">
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition x:Name="PBrainColumn" Width="*"/>
        </Grid.ColumnDefinitions>

        <!--Visual states-->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind convertersUI:BoolToNotBoolConverter.Convert(ViewModel.IsPBrainModeEnabled), Mode=OneWay}"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootGrid.Padding" Value="4,4,0,4"/>
                        <Setter Target="PBrainColumn.Width" Value="0"/>
                        <Setter Target="PBrainGrid.Visibility" Value="Collapsed"/>
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{x:Bind ViewModel.IsPBrainModeEnabled, Mode=OneWay}"/>
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="RootGrid.Padding" Value="4"/>
                        <Setter Target="PBrainColumn.Width" Value="*"/>
                        <Setter Target="PBrainGrid.Visibility" Value="Visible"/>
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!--First row (><+-)-->
        <local:OperatorButton
            Operator="{x:Bind constants:Characters.ForwardPtr}"
            Description="++ptr"
            Command="{x:Bind ViewModel.InsertOperatorCommand}"/>
        <local:OperatorButton
            Operator="{x:Bind constants:Characters.BackwardPtr}"
            Description="--ptr"
            Grid.Row="0"
            Grid.Column="1"
            Command="{x:Bind ViewModel.InsertOperatorCommand}"/>
        <local:OperatorButton
            Operator="{x:Bind constants:Characters.Plus}"
            Description="(*ptr)++"
            Grid.Row="0"
            Grid.Column="2"
            Command="{x:Bind ViewModel.InsertOperatorCommand}"/>
        <local:OperatorButton
            Operator="{x:Bind constants:Characters.Minus}"
            Description="(*ptr)--"
            Grid.Row="0"
            Grid.Column="3"
            Command="{x:Bind ViewModel.InsertOperatorCommand}"/>

        <!--Second row ([].,)-->
        <local:OperatorButton
            Operator="{x:Bind constants:Characters.LoopStart}"
            Description="while (*ptr) {"
            Grid.Row="1"
            Grid.Column="0"
            Command="{x:Bind ViewModel.InsertOperatorCommand}"/>
        <local:OperatorButton
            Operator="{x:Bind constants:Characters.LoopEnd}"
            Description="}"
            Grid.Row="1"
            Grid.Column="1"
            Command="{x:Bind ViewModel.InsertOperatorCommand}"/>
        <local:OperatorButton
            Operator="{x:Bind constants:Characters.PrintChar}"
            Description="putchar(*ptr)"
            Grid.Row="1"
            Grid.Column="2"
            Command="{x:Bind ViewModel.InsertOperatorCommand}"/>
        <local:OperatorButton
            Operator="{x:Bind constants:Characters.ReadChar}"
            Description="*ptr = getchar()"
            Grid.Row="1"
            Grid.Column="3"
            Command="{x:Bind ViewModel.InsertOperatorCommand}"/>

        <!--Border with the PBrain operators-->
        <Grid
            x:Name="PBrainGrid"
            Grid.Row="0"
            Grid.RowSpan="2"
            Grid.Column="4"
            RowSpacing="4"
            ColumnSpacing="4">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <local:OperatorButton
                Operator="{x:Bind constants:Characters.FunctionStart}"
                Description="f ("
                Command="{x:Bind ViewModel.InsertOperatorCommand}"/>
            <local:OperatorButton
                Operator="{x:Bind constants:Characters.FunctionEnd}"
                Description=")"
                Grid.Row="0"
                Grid.Column="1"
                Command="{x:Bind ViewModel.InsertOperatorCommand}"/>
            <local:OperatorButton
                Operator="{x:Bind constants:Characters.FunctionCall}"
                Description="call"
                Grid.Row="1"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Command="{x:Bind ViewModel.InsertOperatorCommand}"/>
        </Grid>
    </Grid>
</UserControl>
